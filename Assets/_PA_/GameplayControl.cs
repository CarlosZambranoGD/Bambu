//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/_PA_/GameplayControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameplayControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameplayControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameplayControl"",
    ""maps"": [
        {
            ""name"": ""PlayerControl"",
            ""id"": ""f1baef56-095b-4e0f-b12c-7f57a500ed99"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""33cfdda6-5450-4b1b-a85c-46092d8c13e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""5073ad41-877e-4165-8d09-118656e2b4ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""d094ba9d-4361-45da-9918-76eb124d22be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parachute"",
                    ""type"": ""Button"",
                    ""id"": ""4b7e5bf2-cedd-4d11-8a66-04d084bcbead"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move Left"",
                    ""type"": ""Button"",
                    ""id"": ""599213ee-e883-4366-b397-b46be4c4c624"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move Right"",
                    ""type"": ""Button"",
                    ""id"": ""fc6268b1-a506-475c-b6de-4ffdb70add59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""cdb74610-4bc1-440e-be05-f89b3a900236"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close Infor"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e7967743-03b9-4089-bdf7-85d793cfe1a6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FinishLevelShortcut"",
                    ""type"": ""Button"",
                    ""id"": ""d6606477-6e03-4d7d-8dfd-783373976c09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""344d44f4-0248-4724-b7c1-efece6371fa4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcad9655-0594-46c6-9a67-15dd43bbebfd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6aba65e-1088-4d89-ace1-d97fc5f9782d"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3c1ea4a-bba1-4d8d-91e9-42ee946949a7"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa7a35db-0ff9-45f2-b4eb-7ccae2f808c3"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be8506c4-9a3d-4c8d-9c54-bb826eb92e17"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a502fb24-5b08-49be-8b0e-67dfb388dd55"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parachute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cfb7fe7-d9f5-4ce6-8de5-3d74fa633fc8"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parachute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d74e880-0de1-452a-b3f0-63ad882d6329"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22ed0864-6fb8-4ce2-badf-6d8e34be0b85"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df8d66ca-13f5-4db6-a562-ee4442799ae6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c258dfed-3528-429d-8fae-70f8846fda81"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87ef4220-6e56-4b1e-b739-6051ef8a18dc"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff6045a2-2c41-42fa-b0fc-289605a40d9e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb7e9576-f265-4365-af77-13d823194b8d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Infor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51298976-7f76-465d-ae7a-5a8f89e29228"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FinishLevelShortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3526e25e-51c1-46f5-bf45-c9c60f4a2bac"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FinishLevelShortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControl
        m_PlayerControl = asset.FindActionMap("PlayerControl", throwIfNotFound: true);
        m_PlayerControl_Jump = m_PlayerControl.FindAction("Jump", throwIfNotFound: true);
        m_PlayerControl_Melee = m_PlayerControl.FindAction("Melee", throwIfNotFound: true);
        m_PlayerControl_Throw = m_PlayerControl.FindAction("Throw", throwIfNotFound: true);
        m_PlayerControl_Parachute = m_PlayerControl.FindAction("Parachute", throwIfNotFound: true);
        m_PlayerControl_MoveLeft = m_PlayerControl.FindAction("Move Left", throwIfNotFound: true);
        m_PlayerControl_MoveRight = m_PlayerControl.FindAction("Move Right", throwIfNotFound: true);
        m_PlayerControl_Pause = m_PlayerControl.FindAction("Pause", throwIfNotFound: true);
        m_PlayerControl_CloseInfor = m_PlayerControl.FindAction("Close Infor", throwIfNotFound: true);
        m_PlayerControl_FinishLevelShortcut = m_PlayerControl.FindAction("FinishLevelShortcut", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControl
    private readonly InputActionMap m_PlayerControl;
    private IPlayerControlActions m_PlayerControlActionsCallbackInterface;
    private readonly InputAction m_PlayerControl_Jump;
    private readonly InputAction m_PlayerControl_Melee;
    private readonly InputAction m_PlayerControl_Throw;
    private readonly InputAction m_PlayerControl_Parachute;
    private readonly InputAction m_PlayerControl_MoveLeft;
    private readonly InputAction m_PlayerControl_MoveRight;
    private readonly InputAction m_PlayerControl_Pause;
    private readonly InputAction m_PlayerControl_CloseInfor;
    private readonly InputAction m_PlayerControl_FinishLevelShortcut;
    public struct PlayerControlActions
    {
        private @GameplayControl m_Wrapper;
        public PlayerControlActions(@GameplayControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_PlayerControl_Jump;
        public InputAction @Melee => m_Wrapper.m_PlayerControl_Melee;
        public InputAction @Throw => m_Wrapper.m_PlayerControl_Throw;
        public InputAction @Parachute => m_Wrapper.m_PlayerControl_Parachute;
        public InputAction @MoveLeft => m_Wrapper.m_PlayerControl_MoveLeft;
        public InputAction @MoveRight => m_Wrapper.m_PlayerControl_MoveRight;
        public InputAction @Pause => m_Wrapper.m_PlayerControl_Pause;
        public InputAction @CloseInfor => m_Wrapper.m_PlayerControl_CloseInfor;
        public InputAction @FinishLevelShortcut => m_Wrapper.m_PlayerControl_FinishLevelShortcut;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlActions instance)
        {
            if (m_Wrapper.m_PlayerControlActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Melee.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @Melee.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @Melee.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @Throw.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnThrow;
                @Throw.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnThrow;
                @Throw.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnThrow;
                @Parachute.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnParachute;
                @Parachute.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnParachute;
                @Parachute.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnParachute;
                @MoveLeft.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveLeft;
                @MoveRight.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveRight;
                @MoveRight.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveRight;
                @MoveRight.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMoveRight;
                @Pause.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @CloseInfor.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCloseInfor;
                @CloseInfor.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCloseInfor;
                @CloseInfor.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCloseInfor;
                @FinishLevelShortcut.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnFinishLevelShortcut;
                @FinishLevelShortcut.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnFinishLevelShortcut;
                @FinishLevelShortcut.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnFinishLevelShortcut;
            }
            m_Wrapper.m_PlayerControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Melee.started += instance.OnMelee;
                @Melee.performed += instance.OnMelee;
                @Melee.canceled += instance.OnMelee;
                @Throw.started += instance.OnThrow;
                @Throw.performed += instance.OnThrow;
                @Throw.canceled += instance.OnThrow;
                @Parachute.started += instance.OnParachute;
                @Parachute.performed += instance.OnParachute;
                @Parachute.canceled += instance.OnParachute;
                @MoveLeft.started += instance.OnMoveLeft;
                @MoveLeft.performed += instance.OnMoveLeft;
                @MoveLeft.canceled += instance.OnMoveLeft;
                @MoveRight.started += instance.OnMoveRight;
                @MoveRight.performed += instance.OnMoveRight;
                @MoveRight.canceled += instance.OnMoveRight;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @CloseInfor.started += instance.OnCloseInfor;
                @CloseInfor.performed += instance.OnCloseInfor;
                @CloseInfor.canceled += instance.OnCloseInfor;
                @FinishLevelShortcut.started += instance.OnFinishLevelShortcut;
                @FinishLevelShortcut.performed += instance.OnFinishLevelShortcut;
                @FinishLevelShortcut.canceled += instance.OnFinishLevelShortcut;
            }
        }
    }
    public PlayerControlActions @PlayerControl => new PlayerControlActions(this);
    public interface IPlayerControlActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMelee(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnParachute(InputAction.CallbackContext context);
        void OnMoveLeft(InputAction.CallbackContext context);
        void OnMoveRight(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnCloseInfor(InputAction.CallbackContext context);
        void OnFinishLevelShortcut(InputAction.CallbackContext context);
    }
}
